{"version":3,"sources":["components/Navbar/payngolinky-200x1000.png","components/Navbar/Navbar.js","components/MetaMask/NetworkData.js","components/MetaMask/OnboardingButton.js","Pangolin.js","components/TokenBalance/TokenBalance.js","components/TokenBalance/TokenData.js","components/TokenBalance/TokenBalanceList.js","components/MetaMask/MetaMaskDisplay.js","components/MetaMask/MetaMask.js","components/Products/ProductCard.js","components/Products/ProductGrid.js","components/Products/SampleProducts.js","components/MerchantPage/MerchantPage.js","components/Footer/Footer.js","components/PaymentButton/PaymentButton.js","components/MetaMaskCustomer/MetaMaskCustomer.js","components/CustomerPage/ProductDescription.js","components/CustomerPage/ProductImageLayout.js","components/CustomerPage/CustomerPage.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","route","onRouteChange","className","href","title","src","logo","alt","onClick","NetworkData","AVAX_CCHAIN_MAINNET_PARAMS","chainId","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","AVAX_CCHAIN_TESTNET_PARAMS","OnboardingButton","updateAccounts","updateProvider","useState","buttonText","setButtonText","isDisabled","setDisabled","accounts","setAccounts","onboarding","useRef","useEffect","current","MetaMaskOnboarding","isMetaMaskInstalled","length","stopOnboarding","handleNewAccounts","newAccounts","window","ethereum","request","method","then","catch","console","error","on","handleProvider","useCallback","a","detectEthereumProvider","provider","ethers","providers","Web3Provider","log","params","_chainId","location","reload","disabled","startOnboarding","Pangolin","props","setupSwap","state","account","triggerSwap","FujiRouter","amountIn","FujiRouterABI","swapContract","swapContractABI","web3","Web3","balanceofABI","WETHtoken","eth","Contract","methods","balanceOf","this","call","WETHBalance","myContract","from","swapAndWithdraw","send","alert","undefined","setState","Component","stringWithPrecision","num","precision","BigNumber","isBigNumber","dp","toString","Number","toFixed","zeroBalance","TokenBalance","address","balance","updateBalance","evaluateBalance","fbAccountAddress","fbContractAddress","tokenBalance","getBalance","substring","tokenABI","contract","balanceNum","utils","formatEther","balanceStr","TokenData","defaultBalances","forEach","data","TokenBalanceList","tokenBalances","setTokenBalances","copiedBalances","map","getShortAddress","MetaMaskDisplay","chainData","setChainData","getChainData","newChainData","MetaMask","_accounts","updateToAddress","ProductCard","id","price","image_url","qty","desc","ProductGrid","products","product","SampleProducts","MerchantPage","Footer","target","rel","data-icon","viewBox","style","fill","d","OOS_TEXT","PaymentButton","toAddress","setAccount","signer","setSigner","getSigner","buyProduct","wethAbi","wethContract","wethWithSigner","connect","payAmount","parseEther","tx","transfer","_tx","MetaMaskCustomer","ProductDescription","ProductImageLayout","CustomerPage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96592cca.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/payngolinky-200x1000.ae921ad2.png\";","import React from 'react';\r\nimport './Navbar.css';\r\n\r\nimport logo from './payngolinky-200x1000.png';\r\n\r\n/**\r\n * Defines navigation bar UI\r\n * @callback routeCallback\r\n * @param {string} route String containing current route\r\n * @param {routeCallback} onRouteChange Callback function handling route change \r\n * @returns UI for navigation bar in JSX\r\n */\r\nconst Navbar = ({ route, onRouteChange }) => {\r\n  return (\r\n    <nav className=\"dt w-100 border-box pa3 ph5-ns\">\r\n      <a\r\n        className=\"dtc v-mid mid-gray link w-50 w-30-l\"\r\n        href=\"https://payngolinky.github.io/shop/\"\r\n        title=\"Payngolinky Home\">\r\n        <img\r\n          src={logo}\r\n          className=\"dib h2\"\r\n          alt=\"Payngolinky Logo\" />\r\n      </a>\r\n      <div className=\"dtc v-mid w-50 w-70-l tr\">\r\n        {\r\n          route === 'merchant'\r\n          ? <p\r\n              onClick={() => onRouteChange('customer')}\r\n              className=\"link pointer white dim f6 f5-ns b tr dib\">\r\n              Customer View\r\n            </p>\r\n          : <p\r\n              onClick={() => onRouteChange('merchant')}\r\n              className=\"link pointer white dim f6 f5-ns b tr dib\">\r\n              Merchant View\r\n            </p>\r\n        }\r\n      </div>\r\n    </nav>\r\n  );\r\n\r\n} // const Navbar = ...\r\n\r\nexport default Navbar;","/**\r\n * NetworkData contains Avalanche network data structures\r\n */\r\nconst NetworkData = {\r\n  AVAX_CCHAIN_MAINNET_PARAMS: {\r\n    chainId: '0xa86a', // A 0x-prefixed hexadecimal chainId\r\n    chainName: 'Avalanche Mainnet C-Chain',\r\n    nativeCurrency: {\r\n        name: 'Avalanche',\r\n        symbol: 'AVAX',\r\n        decimals: 18\r\n    },\r\n    rpcUrls: ['https://api.avax.network/ext/bc/C/rpc'],\r\n    blockExplorerUrls: ['https://cchain.explorer.avax.network/']\r\n  },\r\n  AVAX_CCHAIN_TESTNET_PARAMS: {\r\n    chainId: '0xa869', // A 0x-prefixed hexadecimal chainId\r\n    chainName: 'Avalanche Testnet C-Chain',\r\n    nativeCurrency: {\r\n        name: 'Avalanche',\r\n        symbol: 'AVAX',\r\n        decimals: 18\r\n    },\r\n    rpcUrls: ['https://api.avax-test.network/ext/bc/C/rpc'],\r\n    blockExplorerUrls: ['https://cchain.explorer.avax-test.network/']\r\n  }\r\n};\r\n\r\nexport default NetworkData;","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\n\r\nimport { ethers } from 'ethers';\r\nimport detectEthereumProvider from '@metamask/detect-provider';\r\nimport MetaMaskOnboarding from '@metamask/onboarding';\r\nimport NetworkData from './NetworkData';\r\n\r\n// String constants for button text\r\nconst ONBOARD_TEXT = 'Install MetaMask';\r\nconst CONNECT_TEXT = 'Connect MetaMask';\r\nconst CONNECTED_TEXT = 'MetaMask Connected';\r\n\r\n/**\r\n * Defines onboarding button for installing or connecting MetaMask\r\n * @param {OnboardingButton~updateAccounts} updateAccounts - Callback function to update accounts in parent component\r\n * @param {OnboardingButton~updateProvider} updateProvider - Callback function to update provider in parent component\r\n * @returns MetaMask installation/connection button in JSX\r\n * @description Code taken and modified from https://docs.metamask.io/guide/onboarding-library.html#using-react\r\n */\r\nexport function OnboardingButton({ updateAccounts, updateProvider }) {\r\n  const [buttonText, setButtonText] = useState(ONBOARD_TEXT);\r\n  const [isDisabled, setDisabled] = useState(false);\r\n  const [accounts, setAccounts] = useState([]);\r\n  const onboarding = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!onboarding.current) {\r\n      onboarding.current = new MetaMaskOnboarding();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (MetaMaskOnboarding.isMetaMaskInstalled()) {\r\n      if (accounts.length > 0) {\r\n        setButtonText(CONNECTED_TEXT);\r\n        setDisabled(true);\r\n        onboarding.current.stopOnboarding();\r\n      } else {\r\n        setButtonText(CONNECT_TEXT);\r\n        setDisabled(false);\r\n      }\r\n    }\r\n  }, [accounts]);\r\n\r\n  useEffect(() => {\r\n    const handleNewAccounts = (newAccounts) => {\r\n      setAccounts(newAccounts);\r\n      updateAccounts(newAccounts);\r\n    };\r\n    if (MetaMaskOnboarding.isMetaMaskInstalled()) {\r\n      window.ethereum\r\n        .request({ method: 'eth_requestAccounts' })\r\n        .then(handleNewAccounts)\r\n        .catch(console.error);\r\n      \r\n      window.ethereum.on('accountsChanged', handleNewAccounts);\r\n\r\n      /* return () => {\r\n        window.ethereum.off('accountsChanged', handleNewAccounts);\r\n      }; */\r\n    }\r\n  }, [updateAccounts]);\r\n\r\n  /**\r\n   * Maintain func ref detecting MetaMask Ethereum provider and updating state\r\n   */\r\n  const handleProvider = useCallback(async () => {\r\n    const provider = await detectEthereumProvider();\r\n\r\n    if (provider) {\r\n      if (provider === window.ethereum) {\r\n        // Update state in parent component\r\n        updateProvider(new ethers.providers.Web3Provider(provider));\r\n        console.log(\"handleProvider successfully updated provider\");\r\n\r\n        // If Avalanche test network is not available in MetaMask, add it\r\n        // Code taken from https://docs.avax.network/build/tutorials/smart-contracts/add-avalanche-to-metamask-programmatically\r\n        const chainId = await provider.request({ method: 'eth_chainId'});\r\n        if (chainId !== NetworkData.AVAX_CCHAIN_TESTNET_PARAMS.chainId) {\r\n          provider.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [NetworkData.AVAX_CCHAIN_TESTNET_PARAMS]\r\n          })\r\n          .catch(console.error);\r\n\r\n          // Reload the page once chain is changed\r\n          // @todo Handle chain changes away from Avalanche test network\r\n          provider.on('chainChanged', (_chainId) => window.location.reload());\r\n        }\r\n      } else {\r\n        console.error(\"handleProvider possibly detected multiple wallets installed\");\r\n      }\r\n    } else {\r\n      console.error(\"handleProvider encountered null provider\");\r\n    }\r\n  }, [updateProvider]);\r\n\r\n  useEffect(() => {\r\n    if (MetaMaskOnboarding.isMetaMaskInstalled()) {\r\n      handleProvider();\r\n    }\r\n  }, [handleProvider]);\r\n\r\n  const onClick = () => {\r\n    if (MetaMaskOnboarding.isMetaMaskInstalled()) {\r\n      window.ethereum\r\n        .request({ method: 'eth_requestAccounts' })\r\n        .then((newAccounts) => { setAccounts(newAccounts); });\r\n    } else {\r\n      onboarding.current.startOnboarding();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"mw-100 pa3 pa4-ns\">\r\n      <button\r\n        disabled={isDisabled}\r\n        onClick={onClick}\r\n        className=\"f5 f4-m f3-l tc no-underline br-pill ba bw1 ph3 pv2 dib black pointer\">\r\n        {buttonText}\r\n      </button>\r\n    </section>\r\n  );\r\n\r\n} // export function OnboardingButton( ...\r\n","import React, { Component } from 'react';\r\nimport Web3 from 'web3';\r\n/* import { ethers } from 'ethers'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { ChainId, Token, WAVAX, Fetcher, Trade, Route, TokenAmount, TradeType, Percent, Pair } from '@pangolindex/sdk'\r\nimport IPangolinPair from '@pangolindex/exchange-contracts/artifacts/contracts/pangolin-core/PangolinPair.sol/PangolinPair.json'\r\nimport IPangolinERC20 from '@pangolindex/exchange-contracts/artifacts/contracts/pangolin-core/PangolinERC20.sol/PangolinERC20.json'\r\nimport { getNetwork } from '@ethersproject/networks'\r\nimport { getDefaultProvider } from '@ethersproject/providers'\r\nimport JSBI from 'jsbi'; */\r\n\r\nclass Pangolin extends Component {\r\n  /**\r\n   * Metamask constructor initializes state variables\r\n   * @constructor\r\n   */\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    console.log('Pango initializing...');\r\n    this.FujiRouter = '0x2D99ABD9008Dc933ff5c0CD271B88309593aB921';\r\n    this.amountIn = '100000000000000000'; // 0.1 WAVAX to swap\r\n\r\n    // State containing account address string and text in swap button\r\n    this.state = {\r\n      account: '',\r\n      buttonText: 'You need to connect first!'\r\n    }\r\n    this.FujiRouterABI = [{\"type\":\"constructor\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"address\",\"name\":\"_factory\",\"internalType\":\"address\"},{\"type\":\"address\",\"name\":\"_WAVAX\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address\"}],\"name\":\"WAVAX\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"amountA\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"amountB\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"liquidity\",\"internalType\":\"uint256\"}],\"name\":\"addLiquidity\",\"inputs\":[{\"type\":\"address\",\"name\":\"tokenA\",\"internalType\":\"address\"},{\"type\":\"address\",\"name\":\"tokenB\",\"internalType\":\"address\"},{\"type\":\"uint256\",\"name\":\"amountADesired\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"amountBDesired\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"amountAMin\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"amountBMin\",\"internalType\":\"uint256\"},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\"},{\"type\":\"uint256\",\"name\":\"deadline\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"payable\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"amountToken\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"amountAVAX\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"liquidity\",\"internalType\":\"uint256\"}],\"name\":\"addLiquidityAVAX\",\"inputs\":[{\"type\":\"address\",\"name\":\"token\",\"internalType\":\"address\"},{\"type\":\"uint256\",\"name\":\"amountTokenDesired\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"amountTokenMin\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"amountAVAXMin\",\"internalType\":\"uint256\"},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\"},{\"type\":\"uint256\",\"name\":\"deadline\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address\"}],\"name\":\"factory\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"pure\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"amountIn\",\"internalType\":\"uint256\"}],\"name\":\"getAmountIn\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"amountOut\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"reserveIn\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"reserveOut\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"pure\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"amountOut\",\"internalType\":\"uint256\"}],\"name\":\"getAmountOut\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"amountIn\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"reserveIn\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"reserveOut\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256[]\",\"name\":\"amounts\",\"internalType\":\"uint256[]\"}],\"name\":\"getAmountsIn\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"amountOut\",\"internalType\":\"uint256\"},{\"type\":\"address[]\",\"name\":\"path\",\"internalType\":\"address[]\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256[]\",\"name\":\"amounts\",\"internalType\":\"uint256[]\"}],\"name\":\"getAmountsOut\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"amountIn\",\"internalType\":\"uint256\"},{\"type\":\"address[]\",\"name\":\"path\",\"internalType\":\"address[]\"}]},{\"type\":\"function\",\"stateMutability\":\"pure\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"amountB\",\"internalType\":\"uint256\"}],\"name\":\"quote\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"amountA\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"reserveA\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"reserveB\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"amountA\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"amountB\",\"internalType\":\"uint256\"}],\"name\":\"removeLiquidity\",\"inputs\":[{\"type\":\"address\",\"name\":\"tokenA\",\"internalType\":\"address\"},{\"type\":\"address\",\"name\":\"tokenB\",\"internalType\":\"address\"},{\"type\":\"uint256\",\"name\":\"liquidity\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"amountAMin\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"amountBMin\",\"internalType\":\"uint256\"},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\"},{\"type\":\"uint256\",\"name\":\"deadline\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"amountToken\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"amountAVAX\",\"internalType\":\"uint256\"}],\"name\":\"removeLiquidityAVAX\",\"inputs\":[{\"type\":\"address\",\"name\":\"token\",\"internalType\":\"address\"},{\"type\":\"uint256\",\"name\":\"liquidity\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"amountTokenMin\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"amountAVAXMin\",\"internalType\":\"uint256\"},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\"},{\"type\":\"uint256\",\"name\":\"deadline\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"amountAVAX\",\"internalType\":\"uint256\"}],\"name\":\"removeLiquidityAVAXSupportingFeeOnTransferTokens\",\"inputs\":[{\"type\":\"address\",\"name\":\"token\",\"internalType\":\"address\"},{\"type\":\"uint256\",\"name\":\"liquidity\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"amountTokenMin\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"amountAVAXMin\",\"internalType\":\"uint256\"},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\"},{\"type\":\"uint256\",\"name\":\"deadline\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"amountToken\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"amountAVAX\",\"internalType\":\"uint256\"}],\"name\":\"removeLiquidityAVAXWithPermit\",\"inputs\":[{\"type\":\"address\",\"name\":\"token\",\"internalType\":\"address\"},{\"type\":\"uint256\",\"name\":\"liquidity\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"amountTokenMin\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"amountAVAXMin\",\"internalType\":\"uint256\"},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\"},{\"type\":\"uint256\",\"name\":\"deadline\",\"internalType\":\"uint256\"},{\"type\":\"bool\",\"name\":\"approveMax\",\"internalType\":\"bool\"},{\"type\":\"uint8\",\"name\":\"v\",\"internalType\":\"uint8\"},{\"type\":\"bytes32\",\"name\":\"r\",\"internalType\":\"bytes32\"},{\"type\":\"bytes32\",\"name\":\"s\",\"internalType\":\"bytes32\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"amountAVAX\",\"internalType\":\"uint256\"}],\"name\":\"removeLiquidityAVAXWithPermitSupportingFeeOnTransferTokens\",\"inputs\":[{\"type\":\"address\",\"name\":\"token\",\"internalType\":\"address\"},{\"type\":\"uint256\",\"name\":\"liquidity\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"amountTokenMin\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"amountAVAXMin\",\"internalType\":\"uint256\"},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\"},{\"type\":\"uint256\",\"name\":\"deadline\",\"internalType\":\"uint256\"},{\"type\":\"bool\",\"name\":\"approveMax\",\"internalType\":\"bool\"},{\"type\":\"uint8\",\"name\":\"v\",\"internalType\":\"uint8\"},{\"type\":\"bytes32\",\"name\":\"r\",\"internalType\":\"bytes32\"},{\"type\":\"bytes32\",\"name\":\"s\",\"internalType\":\"bytes32\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"amountA\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"amountB\",\"internalType\":\"uint256\"}],\"name\":\"removeLiquidityWithPermit\",\"inputs\":[{\"type\":\"address\",\"name\":\"tokenA\",\"internalType\":\"address\"},{\"type\":\"address\",\"name\":\"tokenB\",\"internalType\":\"address\"},{\"type\":\"uint256\",\"name\":\"liquidity\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"amountAMin\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"amountBMin\",\"internalType\":\"uint256\"},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\"},{\"type\":\"uint256\",\"name\":\"deadline\",\"internalType\":\"uint256\"},{\"type\":\"bool\",\"name\":\"approveMax\",\"internalType\":\"bool\"},{\"type\":\"uint8\",\"name\":\"v\",\"internalType\":\"uint8\"},{\"type\":\"bytes32\",\"name\":\"r\",\"internalType\":\"bytes32\"},{\"type\":\"bytes32\",\"name\":\"s\",\"internalType\":\"bytes32\"}]},{\"type\":\"function\",\"stateMutability\":\"payable\",\"outputs\":[{\"type\":\"uint256[]\",\"name\":\"amounts\",\"internalType\":\"uint256[]\"}],\"name\":\"swapAVAXForExactTokens\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"amountOut\",\"internalType\":\"uint256\"},{\"type\":\"address[]\",\"name\":\"path\",\"internalType\":\"address[]\"},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\"},{\"type\":\"uint256\",\"name\":\"deadline\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"payable\",\"outputs\":[{\"type\":\"uint256[]\",\"name\":\"amounts\",\"internalType\":\"uint256[]\"}],\"name\":\"swapExactAVAXForTokens\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"amountOutMin\",\"internalType\":\"uint256\"},{\"type\":\"address[]\",\"name\":\"path\",\"internalType\":\"address[]\"},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\"},{\"type\":\"uint256\",\"name\":\"deadline\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"payable\",\"outputs\":[],\"name\":\"swapExactAVAXForTokensSupportingFeeOnTransferTokens\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"amountOutMin\",\"internalType\":\"uint256\"},{\"type\":\"address[]\",\"name\":\"path\",\"internalType\":\"address[]\"},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\"},{\"type\":\"uint256\",\"name\":\"deadline\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[{\"type\":\"uint256[]\",\"name\":\"amounts\",\"internalType\":\"uint256[]\"}],\"name\":\"swapExactTokensForAVAX\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"amountIn\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"amountOutMin\",\"internalType\":\"uint256\"},{\"type\":\"address[]\",\"name\":\"path\",\"internalType\":\"address[]\"},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\"},{\"type\":\"uint256\",\"name\":\"deadline\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"swapExactTokensForAVAXSupportingFeeOnTransferTokens\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"amountIn\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"amountOutMin\",\"internalType\":\"uint256\"},{\"type\":\"address[]\",\"name\":\"path\",\"internalType\":\"address[]\"},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\"},{\"type\":\"uint256\",\"name\":\"deadline\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[{\"type\":\"uint256[]\",\"name\":\"amounts\",\"internalType\":\"uint256[]\"}],\"name\":\"swapExactTokensForTokens\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"amountIn\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"amountOutMin\",\"internalType\":\"uint256\"},{\"type\":\"address[]\",\"name\":\"path\",\"internalType\":\"address[]\"},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\"},{\"type\":\"uint256\",\"name\":\"deadline\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"amountIn\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"amountOutMin\",\"internalType\":\"uint256\"},{\"type\":\"address[]\",\"name\":\"path\",\"internalType\":\"address[]\"},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\"},{\"type\":\"uint256\",\"name\":\"deadline\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[{\"type\":\"uint256[]\",\"name\":\"amounts\",\"internalType\":\"uint256[]\"}],\"name\":\"swapTokensForExactAVAX\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"amountOut\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"amountInMax\",\"internalType\":\"uint256\"},{\"type\":\"address[]\",\"name\":\"path\",\"internalType\":\"address[]\"},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\"},{\"type\":\"uint256\",\"name\":\"deadline\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[{\"type\":\"uint256[]\",\"name\":\"amounts\",\"internalType\":\"uint256[]\"}],\"name\":\"swapTokensForExactTokens\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"amountOut\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"amountInMax\",\"internalType\":\"uint256\"},{\"type\":\"address[]\",\"name\":\"path\",\"internalType\":\"address[]\"},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\"},{\"type\":\"uint256\",\"name\":\"deadline\",\"internalType\":\"uint256\"}]},{\"type\":\"receive\",\"stateMutability\":\"payable\"}];\r\n    this.swapContract = '0xa4d2afbCC5B4Ea597AB78AFF83004Ce5749bBc7F';\r\n    this.swapContractABI = [{\"inputs\": [{\"internalType\": \"address payable\",\"name\": \"merchant_\",\"type\": \"address\"},{\"internalType\": \"uint256\",\"name\": \"threshold_\",\"type\": \"uint256\"}],\"stateMutability\": \"nonpayable\",\"type\": \"constructor\"},{\"anonymous\": false,\"inputs\": [{\"indexed\": true,\"internalType\": \"bytes32\",\"name\": \"id\",\"type\": \"bytes32\"}],\"name\": \"ChainlinkCancelled\",\"type\": \"event\"},{\"anonymous\": false,\"inputs\": [{\"indexed\": true,\"internalType\": \"bytes32\",\"name\": \"id\",\"type\": \"bytes32\"}],\"name\": \"ChainlinkFulfilled\",\"type\": \"event\"},{\"anonymous\": false,\"inputs\": [{\"indexed\": true,\"internalType\": \"bytes32\",\"name\": \"id\",\"type\": \"bytes32\"}],\"name\": \"ChainlinkRequested\",\"type\": \"event\"},{\"inputs\": [{\"internalType\": \"bytes32\",\"name\": \"_requestId\",\"type\": \"bytes32\"},{\"internalType\": \"uint256\",\"name\": \"_price\",\"type\": \"uint256\"}],\"name\": \"fulfill\",\"outputs\": [],\"stateMutability\": \"nonpayable\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"lastETHPrice\",\"outputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"merchant\",\"outputs\": [{\"internalType\": \"address payable\",\"name\": \"\",\"type\": \"address\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"owner\",\"outputs\": [{\"internalType\": \"address\",\"name\": \"\",\"type\": \"address\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"requestPriceData\",\"outputs\": [{\"internalType\": \"bytes32\",\"name\": \"requestId\",\"type\": \"bytes32\"}],\"stateMutability\": \"nonpayable\",\"type\": \"function\"},{\"inputs\": [{\"internalType\": \"uint256\",\"name\": \"threshold_\",\"type\": \"uint256\"}],\"name\": \"setThreshold\",\"outputs\": [],\"stateMutability\": \"nonpayable\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"swapAndWithdraw\",\"outputs\": [],\"stateMutability\": \"nonpayable\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"withdrawAll\",\"outputs\": [],\"stateMutability\": \"nonpayable\",\"type\": \"function\"}];\r\n    //console.log(window.web3);\r\n  }\r\n\r\n  async triggerSwap(){\r\n    console.log('swap WETH to USDT');\r\n    window.web3 = new Web3(window.ethereum);\r\n\r\n    let balanceofABI = [{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"type\":\"function\"},];\r\n    var WETHtoken = new window.web3.eth.Contract(balanceofABI, '0xFE314b188135893A684EE997eDcb81823Ffb575B', {});\r\n\r\n    let WETHBalance = await WETHtoken.methods.balanceOf(this.swapContract).call();\r\n\r\n    var myContract = new window.web3.eth.Contract(this.swapContractABI, this.swapContract, {\r\n      from: this.state.account, // default from address\r\n    });\r\n    if(WETHBalance > 0){\r\n      await myContract.methods.swapAndWithdraw().send();\r\n    }\r\n    else{\r\n      alert('the contract WETH Balance is 0, not enough to swap!')\r\n    }\r\n  }\r\n\r\n  setupSwap = () => {\r\n    if (this.state.account.length > 0) {\r\n      this.triggerSwap()\r\n        .then(() => window.location.reload()) // Refresh window hack so AVAX balance is updated\r\n        .catch(error => console.error(error));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update account address and swap button text once passed-in accounts prop is valid\r\n   * @details https://reactjs.org/docs/react-component.html#componentdidupdate\r\n   */\r\n  componentDidUpdate() {\r\n    if (this.props.accounts !== undefined\r\n        && this.props.accounts.length > 0\r\n        && this.props.accounts[0] !== this.state.account) {\r\n      this.setState({\r\n        account: this.props.accounts[0],\r\n        buttonText: 'Swap WETH to USDT'\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"mw-100 pa2 pa3-ns\">\r\n        <button\r\n          onClick={this.setupSwap}\r\n          className=\"f5 f4-m f3-l tc no-underline br-pill ba bw1 ph3 pv2 dib black pointer\">\r\n          {this.state.buttonText}\r\n        </button>\r\n      </section>\r\n    );\r\n  };\r\n\r\n} // class Pangolin extends Component\r\n\r\nexport default Pangolin;","import React, { useCallback, useEffect } from 'react';\r\n\r\nimport { ethers } from 'ethers';\r\n\r\n/**\r\n * Convert number to a string with specified precision\r\n * @param {number} num - BigNumber or Number to convert to a string\r\n * @param {number} precision - Number indicating precision to display\r\n * @returns String version of number with given precision\r\n */\r\nconst stringWithPrecision = (num = 0, precision = 4) => {\r\n  if (ethers.BigNumber.isBigNumber(num)) {\r\n    return num.dp(precision).toString(10);\r\n  }\r\n  return Number(num).toFixed(precision).toString();\r\n}\r\n\r\n/**\r\n * String constant representing a balance of 0.0000 (four decimal places)\r\n */\r\nconst zeroBalance = stringWithPrecision();\r\n\r\n/**\r\n * Displays the balance of a token in MetaMask wallet\r\n * @param {string} symbol - String containing symbol of token\r\n * @param {string} address - String containing token contract address\r\n * @param {string} balance - String containing token balance to display\r\n * @param {TokenBalance~updateBalance} updateBalance - Callback function to update token balance in parent component\r\n * @param {string[]} accounts - Array containing single account address string\r\n * @param {Object} provider - Web3Provider provider wrapper\r\n * @returns UI containing balance of a token in JSX\r\n */\r\nconst TokenBalance = ({ symbol, address, balance, updateBalance, accounts, provider }) => {\r\n  /**\r\n   * Retrieve token balance and update states\r\n   */\r\n  const evaluateBalance = useCallback(async () => {\r\n    if (symbol === undefined ||\r\n        symbol.length === 0 ||\r\n        address === undefined ||\r\n        (address.length === 0 && symbol !== 'AVAX') ||\r\n        balance === undefined ||\r\n        balance.length === 0 ||\r\n        accounts === undefined ||\r\n        accounts.length === 0 ||\r\n        provider === null) {\r\n      // Balance defaults to zero\r\n      return;\r\n    }\r\n\r\n    // Define addresses that Felix used in the contract\r\n    const fbAccountAddress = '0xC6721042d28377c74f36f03755b95b3D0B5bA8C1';\r\n    const fbContractAddress = '0xa4d2afbCC5B4Ea597AB78AFF83004Ce5749bBc7F';\r\n\r\n    try {\r\n      // Initialize variable that will store retrieved balance\r\n      let tokenBalance = zeroBalance;\r\n\r\n      if (symbol === 'AVAX') {\r\n        // *** Get AVAX balance separately due to unknown token address ***\r\n        // tokenBalance = await provider.getBalance(accounts[0]);\r\n\r\n        // Get AVAX balance from Felix's account\r\n        tokenBalance = await provider.getBalance(fbAccountAddress);\r\n\r\n      } else if (symbol.substring(0, 8) === 'CONTRACT') {\r\n        // *** Get CONTRACT token balance using token address ***\r\n\r\n        // ERC-20 Contract ABI\r\n        // Following code taken from https://docs.ethers.io/v5/getting-started/\r\n        const tokenABI = [\r\n          // Some details about the token\r\n          \"function name() view returns (string)\",\r\n          \"function symbol() view returns (string)\",\r\n\r\n          // Get the account balance\r\n          \"function balanceOf(address) view returns (uint)\",\r\n        ];\r\n\r\n        // Create contract for token and retrieve balance from Felix's contract\r\n        const contract = new ethers.Contract(address, tokenABI, provider);\r\n        tokenBalance = await contract.balanceOf(fbContractAddress);\r\n\r\n      } else {\r\n        // *** Get MetaMask balance of other tokens using token address ***\r\n\r\n        // ERC-20 Contract ABI\r\n        // Following code taken from https://docs.ethers.io/v5/getting-started/\r\n        const tokenABI = [\r\n          // Some details about the token\r\n          \"function name() view returns (string)\",\r\n          \"function symbol() view returns (string)\",\r\n\r\n          // Get the account balance\r\n          \"function balanceOf(address) view returns (uint)\",\r\n        ];\r\n\r\n        // Create contract object for token and retrieve balance\r\n        const contract = new ethers.Contract(address, tokenABI, provider);\r\n        // tokenBalance = await contract.balanceOf(accounts[0]);\r\n\r\n        // Get token balance from Felix's account\r\n        tokenBalance = await contract.balanceOf(fbAccountAddress);\r\n\r\n      } // else -> if (symbol === 'AVAX')\r\n      \r\n      if (tokenBalance !== balance) {\r\n        // Balance has changed from previous state so update parent state\r\n        const balanceNum = Number(ethers.utils.formatEther(tokenBalance));\r\n        const balanceStr = stringWithPrecision(balanceNum);\r\n        updateBalance(symbol, balanceStr);\r\n      }\r\n    } catch (error) {\r\n      // Balance defaults to zero\r\n      console.error(error);\r\n    }\r\n  }, [symbol, address, balance, updateBalance, accounts, provider]);\r\n\r\n  useEffect(() => { evaluateBalance(); }, [evaluateBalance]);\r\n\r\n  return (\r\n    <li\r\n      key={symbol}\r\n      className=\"pa1 pa2-ns bb b--black-10\">\r\n      <b className=\"db f3 mb1 tc\">\r\n        {balance}\r\n      </b>\r\n      <span className=\"f5 db lh-copy tc\">\r\n        {symbol}\r\n      </span>\r\n    </li>\r\n  );\r\n\r\n}; // const TokenBalance = ...\r\n\r\nexport default TokenBalance;","/**\r\n * TokenData contains token contract addresses of selected tokens\r\n */\r\nconst TokenData = [\r\n  {\r\n    'symbol': 'AVAX',\r\n    'address': '',\r\n    'chainId': '0xa869'\r\n  },\r\n  {\r\n    'symbol': 'LINK',\r\n    'address': '0x2F0708E5FB96fd1E9F21eAbAd06EE5F337586A02',\r\n    'chainId': '0xa869'\r\n  },\r\n  {\r\n    'symbol': 'WETH',\r\n    'address': '0xFE314b188135893A684EE997eDcb81823Ffb575B',\r\n    'chainId': '0xa869'\r\n  },\r\n  {\r\n    'symbol': 'USDT',\r\n    'address': '0xaeC89D2e476a57498b2FB661d3B6667C96BbC11a',\r\n    'chainId': '0xa869'\r\n  },\r\n  {\r\n    'symbol': 'CONTRACT-LINK',\r\n    'address': '0x2F0708E5FB96fd1E9F21eAbAd06EE5F337586A02',\r\n    'chainId': '0xa869'\r\n  },\r\n  {\r\n    'symbol': 'CONTRACT-WETH',\r\n    'address': '0xFE314b188135893A684EE997eDcb81823Ffb575B',\r\n    'chainId': '0xa869'\r\n  },\r\n  {\r\n    'symbol': 'CONTRACT-USDT',\r\n    'address': '0xaeC89D2e476a57498b2FB661d3B6667C96BbC11a',\r\n    'chainId': '0xa869'\r\n  }\r\n];\r\n\r\nexport default TokenData;","import React, { useCallback, useState } from 'react';\r\n\r\nimport TokenBalance from './TokenBalance';\r\nimport TokenData from './TokenData';\r\n\r\n/**\r\n * String constant representing a balance of 0.0000\r\n */\r\nconst zeroBalance = '0.0000';\r\n\r\n/**\r\n * Array containing default (zero) balances for each token in TokenData\r\n */\r\nlet defaultBalances = {};\r\nTokenData.forEach(data => {\r\n  defaultBalances[data.symbol] = zeroBalance;\r\n});\r\n\r\n/**\r\n * Displays the balances of selected tokens in MetaMask wallet\r\n * @param {string[]} accounts - Array containing single account address string\r\n * @param {Object} provider - Web3Provider provider wrapper\r\n * @returns Multiple TokenBalance UI elements, each displaying a token balance\r\n */\r\nconst TokenBalanceList = ({ accounts, provider }) => {\r\n  // Balance strings of selected tokens in MetaMask Wallet\r\n  const [tokenBalances, setTokenBalances] = useState(defaultBalances);\r\n\r\n  /**\r\n   * Update tokenBalances if changed for input token given by symbol\r\n   * @param {string} symbol - String containing token name\r\n   * @param {string} balance - New balance for given token\r\n   */\r\n  const updateBalance = useCallback((symbol, balance) => {\r\n    // Copy current state for all tokens in tokenBalances before updating it\r\n    let copiedBalances = { ...tokenBalances };\r\n\r\n    // Balance has changed so update state\r\n    if (balance !== copiedBalances[symbol]) {\r\n      // Update copiedBalances with given inputs\r\n      copiedBalances[symbol] = balance;\r\n\r\n      // Finally, update tokenBalances\r\n      setTokenBalances(copiedBalances);\r\n    }\r\n  }, [tokenBalances]);\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        TokenData.map(data => {\r\n          return (\r\n            <TokenBalance\r\n              key={data.symbol + '_' + data.chainId}\r\n              symbol={data.symbol}\r\n              address={data.address}\r\n              balance={tokenBalances[data.symbol]}\r\n              updateBalance={updateBalance}\r\n              accounts={accounts}\r\n              provider={provider}\r\n            />\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n\r\n} // const TokenBalanceList = ...\r\n\r\nexport default TokenBalanceList;","import React, { useCallback, useEffect, useState } from 'react';\r\n\r\nimport NetworkData from './NetworkData';\r\nimport TokenBalanceList from '../TokenBalance/TokenBalanceList';\r\n\r\n/**\r\n * Retrieve account address as a truncated string\r\n * @param {string[]} accounts - Array containing single account address string\r\n * @returns String containing truncated account address\r\n */\r\nconst getShortAddress = (accounts) => {\r\n  if (accounts.length === 0) {\r\n    return \"Unavailable\";\r\n  } else {\r\n    const address = accounts[0];\r\n    return address.substring(0, 6)\r\n      + \"...\"\r\n      + address.substring(address.length - 4);\r\n  }\r\n}\r\n\r\n/**\r\n * Display for MetaMask wallet data\r\n * @param {string[]} accounts - Array containing single account address string\r\n * @param {Object} provider - Web3Provider provider wrapper\r\n */\r\nconst MetaMaskDisplay = ({ accounts, provider }) => {\r\n  const [chainData, setChainData] = useState(\"Unavailable\");\r\n\r\n  /**\r\n   * Get chainName (optional) and chainId as a string\r\n   */\r\n  const getChainData = useCallback(async () => {\r\n    if (provider === null) {\r\n      // If web3Provider is null, default to Unavailable\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // This took a long time to figure out, need to use \".provider.request\"\r\n      // https://docs.ethers.io/v5/api/providers/other/#Web3Provider\r\n      const chainId = await provider.provider.request({\r\n        method: 'eth_chainId'\r\n      });\r\n\r\n      // Create variable to store chainId and/or chainName\r\n      let newChainData;\r\n\r\n      if (chainId === NetworkData.AVAX_CCHAIN_TESTNET_PARAMS.chainId) {\r\n        // Combine Avalanche testnet chainName and chainId\r\n        newChainData = NetworkData.AVAX_CCHAIN_TESTNET_PARAMS.chainName\r\n          + \", \" + NetworkData.AVAX_CCHAIN_TESTNET_PARAMS.chainId;\r\n      } else if (chainId === NetworkData.AVAX_CCHAIN_MAINNET_PARAMS.chainId) {\r\n        // Combine Avalanche mainnet chainName and chainId\r\n        newChainData = NetworkData.AVAX_CCHAIN_MAINNET_PARAMS.chainName\r\n          + \", \" + NetworkData.AVAX_CCHAIN_MAINNET_PARAMS.chainId;\r\n      } else {\r\n        // Otherwise, just use chainId\r\n        newChainData = chainId;\r\n      }\r\n\r\n      // If chain data changed, update state\r\n      if (newChainData !== chainData) {\r\n        setChainData(newChainData);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, [chainData, provider]);\r\n\r\n  useEffect(() => { getChainData(); }, [getChainData]);\r\n\r\n  return (\r\n    <section className=\"mw-100\">\r\n      <ul className=\"list pl0\">\r\n        {/* Display chain info */}\r\n        <li className=\"pa1 pa2-ns bb b--black-10\">\r\n          <b className=\"db f3 mb1 tc\">Chain</b>\r\n          <span className=\"f5 db lh-copy tc\">{ chainData }</span>\r\n        </li>\r\n\r\n        {/* Display account/wallet address */}\r\n        <li className=\"pa1 pa2-ns bb b--black-10\">\r\n          <b className=\"db f3 mb1 tc\">Account Address</b>\r\n          <span className=\"f5 db lh-copy tc\">\r\n            { getShortAddress(accounts) }\r\n          </span>\r\n        </li>\r\n\r\n        {/* Display token balances in wallet */}\r\n        <TokenBalanceList accounts={accounts} provider={provider} />\r\n      </ul>\r\n    </section>\r\n  );\r\n} // const MetaMaskDisplay = ...\r\n\r\nexport default MetaMaskDisplay;","import React, { Component } from 'react';\r\n\r\nimport { OnboardingButton } from './OnboardingButton';\r\nimport Pangolin from '../../Pangolin';\r\nimport MetaMaskDisplay from './MetaMaskDisplay';\r\n\r\nclass MetaMask extends Component {\r\n  /**\r\n   * Metamask constructor initializes state variables\r\n   * @constructor\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      accounts: [],\r\n      provider: null\r\n    }\r\n\r\n    /* this.ethereumButton = document.querySelector('#MetaMaskButton');\r\n    this.sendEthButton = document.querySelector('#MMsendToAddress');\r\n    this.swapAvaxButton = document.querySelector('#MMswap');\r\n    this.account = undefined;\r\n    if(!this.metaMaskInstalled() && this.isMetaMask()){\r\n      console.log('MetaMask is not installed!');\r\n      this.ethereumButton.innerHTML = 'Install Metamask';\r\n    }\r\n    else{\r\n      console.log('MetaMask is installed');\r\n      this.setupConnect();\r\n      this.setupSend();\r\n    } */\r\n  }\r\n\r\n  /**\r\n   * Update accounts in MetaMask state\r\n   * @param {string[]} accounts - Array containing single account address string\r\n   */\r\n  updateAccounts = (_accounts) => {\r\n    // Define addresses that Felix used in the contract\r\n    const fbAccountAddress = '0xC6721042d28377c74f36f03755b95b3D0B5bA8C1';\r\n    const fbContractAddress = '0xa4d2afbCC5B4Ea597AB78AFF83004Ce5749bBc7F';\r\n\r\n    // this.setState({accounts: accounts});\r\n\r\n    // Set accounts to Felix's account, a constant\r\n    this.setState({accounts: [fbAccountAddress]});\r\n\r\n    // Update state in root level App component\r\n    /* if (accounts !== undefined && accounts.length > 0) {\r\n      this.props.updateToAddress(accounts[0]);\r\n    } */\r\n\r\n    // Customer needs to send payment to contract address, not merchant account\r\n    this.props.updateToAddress(fbContractAddress);\r\n  }\r\n\r\n  /**\r\n   * Update provider in MetaMask state\r\n   * @param {Object} provider - Web3Provider wrapper from window.ethereum\r\n   */\r\n  updateProvider = (provider) => {\r\n    this.setState({provider: provider});\r\n  }\r\n\r\n  /* metaMaskInstalled(){\r\n    return typeof window.ethereum !== 'undefined' ? true : false;\r\n  }\r\n\r\n  isMetaMask(){\r\n    return window.ethereum.isMetaMask;\r\n  }\r\n\r\n  setupConnect(){\r\n    this.ethereumButton.addEventListener('click', () => {this.linkMetaMaskAccount();});\r\n    window.ethereum.on('accountsChanged', function (accounts) {\r\n      this.account = accounts[0];\r\n      // Time to reload your interface with accounts[0]!\r\n      console.log('The account was changed!')\r\n    });\r\n    window.ethereum.on('chainChanged', (_chainId) => window.location.reload());\r\n  }\r\n\r\n  handleChainChanged(chainId){\r\n    console.log(chainId);\r\n    let fujiHex = 43113;\r\n    console.log(fujiHex.toString(16));\r\n    if(chainId === '0x'+fujiHex.toString(16)){\r\n      console.log('all good');\r\n      return true;\r\n    }\r\n    else{\r\n      this.ethereumButton.innerHTML = 'please switch to Fuji Network';\r\n      return false;\r\n    }\r\n  }\r\n\r\n  setupSend(){\r\n    //Sending Ethereum to an address\r\n    let myvalue = 0.05e18;\r\n    // not setting any price should let it set it to default values\r\n    // determined by network\r\n    //let mygasPrice = 225e9;\r\n    //let mygas = 21000;\r\n    this.sendEthButton.addEventListener('click', () => {\r\n      if(this.account !== undefined){\r\n        window.ethereum\r\n        .request({\r\n          method: 'eth_sendTransaction',\r\n          params: [\r\n            {\r\n              from: this.account,\r\n              to: '0x9a57d321084F5b1ac1fCB32230a83Df9EF0AB565',\r\n              value: '0x'+myvalue.toString(16),\r\n              //gasPrice: '0x'+mygasPrice.toString(16),\r\n              //gas: '0x'+mygas.toString(16),\r\n            },\r\n          ],\r\n        })\r\n        .then((txHash) => {console.log(txHash);})\r\n        .catch((error) => console.error);\r\n      }\r\n    });\r\n  }\r\n\r\n  async linkMetaMaskAccount(){\r\n    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' }).catch((error) => console.error);\r\n    const chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n    if(this.handleChainChanged(chainId)){\r\n      if(accounts){\r\n        this.account = accounts[0];\r\n        this.ethereumButton.innerHTML = this.account;\r\n        this.sendEthButton.innerHTML = 'Send Coins';\r\n        this.swapAvaxButton.innerHTML = 'Swap Avax';\r\n      }\r\n    }\r\n  } */\r\n\r\n  /**\r\n   * Render MetaMask UI\r\n   * @returns Complete MetaMask UI in JSX\r\n   */\r\n  render() {\r\n    const { accounts, provider } = this.state;\r\n\r\n    return (\r\n      <section className=\"mw-100\">\r\n        <OnboardingButton\r\n          updateAccounts={this.updateAccounts}\r\n          updateProvider={this.updateProvider}\r\n        />\r\n\r\n        <Pangolin accounts={accounts} />\r\n\r\n        <MetaMaskDisplay\r\n          accounts={accounts}\r\n          provider={provider}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n\r\n} // class MetaMask extends Component\r\n\r\nexport default MetaMask;","import React from 'react';\r\n\r\n/**\r\n * Defines UI for a single product card\r\n * @param {number} id - Product ID\r\n * @param {string} name - Name of product\r\n * @param {number} price - Price of product (in ETH)\r\n * @param {string} image_url - Product image URL\r\n * @param {number} qty - Quantity of product available\r\n * @param {string} desc - Brief description of product\r\n * @returns Single product card in JSX\r\n */\r\nconst ProductCard = ({id, name, price, image_url, qty, desc}) => {\r\n  return (\r\n    <article className=\"link dim pointer br2 ba dark-gray b--black-10 shadow-3 mv4 w-100 mw5 center\">\r\n      <img\r\n        src={image_url}\r\n        className=\"db w-100 br2 br--top\"\r\n        alt={\"Product: \" + name} />\r\n\r\n      <div className=\"pa2 ph3-ns h4 pb3-ns\">\r\n        <div className=\"dt w-100 mt1\">\r\n          <div className=\"dtc\">\r\n            <h1 className=\"f5 f4-ns mv0\">{name}</h1>\r\n          </div>\r\n          <div className=\"dtc tr\">\r\n            <h2 className=\"f5 mv0\">{Number(price).toFixed(4)} ETH</h2>\r\n          </div>\r\n        </div>\r\n\r\n        <p className=\"f6 lh-copy measure mt2 mid-gray\">\r\n          ID {id}, Qty {qty}: {desc}\r\n        </p>\r\n      </div>\r\n    </article>\r\n  );\r\n} // const ProductCard = ...\r\n\r\nexport default ProductCard;","import React from 'react';\r\n\r\nimport ProductCard from './ProductCard';\r\n\r\n/**\r\n * Defines UI for a grid of product cards\r\n * @param {Object[]} products - Array of products to populate the grid with\r\n * @returns Grid of product cards in JSX\r\n */\r\nconst ProductGrid = ({products}) => {\r\n  return (\r\n    <section className=\"cf\">\r\n      {\r\n        products.map(product => {\r\n          return (\r\n            <div key={product.id} className=\"fl w-100 w-50-m w-25-l pa3 pa4-l\">\r\n              <ProductCard\r\n                id={product.id}\r\n                name={product.name}\r\n                price={product.price}\r\n                image_url={product.image_url}\r\n                qty={product.qty}\r\n                desc={product.desc}\r\n              />\r\n            </div>\r\n          );\r\n        })\r\n      }\r\n    </section>\r\n  );\r\n} // const ProductGrid = ...\r\n\r\nexport default ProductGrid;","/**\r\n * SampleProducts is an array of JSON objects containing sample products\r\n */\r\nconst SampleProducts = [\r\n  {\r\n    id: 1,\r\n    name: \"AVAX T-Shirt\",\r\n    price: 0.0100,\r\n    image_url: \"https://ih1.redbubble.net/image.2210792579.3669/rco,womens_premium_t_shirt,womens,x500,fafafa:ca443f4786,front-c,40,0,300,300-bg,f8f8f8.jpg\",\r\n    desc: \"Dabbing Easter bunny HODLing AVAX\",\r\n    qty: 30\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"LINK T-Shirt\",\r\n    price: 0.0128,\r\n    image_url: \"https://ih1.redbubble.net/image.1950348338.7594/ssrco,mens_premium_t_shirt,mens,101010:01c5ca27c6,front,square_three_quarter,x300-bg,f8f8f8.1.jpg\",\r\n    desc: \"Chainlink See You on the Moon t-shirt\",\r\n    qty: 57\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"GRT Journal\",\r\n    price: 0.0102,\r\n    image_url: \"https://ih1.redbubble.net/image.2260882070.0553/hj,300x-pad,300x300,f8f8f8.jpg\",\r\n    desc: \"The Graph hardcover journal\",\r\n    qty: 43\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"AAVE Curtain\",\r\n    price: 0.0310,\r\n    image_url: \"https://ih1.redbubble.net/image.2012870348.5512/ur,shower_curtain_closed_context,square,300x300.1.jpg\",\r\n    desc: \"AAVE shower curtain, 71 x 74 inches\",\r\n    qty: 98\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"SOL T-Shirt\",\r\n    price: 0.0092,\r\n    image_url: \"https://ih1.redbubble.net/image.2202518381.7027/ssrco,slim_fit_t_shirt,two_model,101010:01c5ca27c6,front,square_three_quarter,300x300.jpg\",\r\n    desc: \"Solana My Retirement Plan t-shirt\",\r\n    qty: 123\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"ETH Case\",\r\n    price: 0.0085,\r\n    image_url: \"https://ih1.redbubble.net/image.1373269076.7025/icr,iphone_12_soft,back,a,x300-pad,300x300,f8f8f8.jpg\",\r\n    desc: \"Ethereum iPhone 12 shock absorbent case\",\r\n    qty: 214\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Polygon Logo\",\r\n    price: 0.0020,\r\n    image_url: \"https://ih1.redbubble.net/image.2229528085.4308/sss,small,product_square,300x300.jpg\",\r\n    desc: \"Polygon To The Moon! sticker\",\r\n    qty: 17\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"LINK Mask\",\r\n    price: 0.0047,\r\n    image_url: \"https://ih1.redbubble.net/image.1869798016.8105/ur,flat_mask_three_quarter,square,300x300.jpg\",\r\n    desc: \"Two layers of soft 95% polyester\",\r\n    qty: 85\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"HODL Chiffon\",\r\n    price: 0.0142,\r\n    image_url: \"https://ih1.redbubble.net/image.481948677.9432/ssrco,chiffon_top,womens,black,front,square_three_quarter,x300-bg,f8f8f8.1u8.jpg\",\r\n    desc: \"HODL red background chiffon top\",\r\n    qty: 56\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"Acala T-Shirt\",\r\n    price: 0.0093,\r\n    image_url: \"https://ih1.redbubble.net/image.2043110152.4257/ssrco,classic_tee,two_models,fafafa:ca443f4786,front,square_three_quarter,300x300.jpg\",\r\n    desc: \"Acala Network classic t-shirt\",\r\n    qty: 38\r\n  },\r\n  {\r\n    id: 11,\r\n    name: \"AVAX T-Shirt\",\r\n    price: 0.0116,\r\n    image_url: \"https://ih1.redbubble.net/image.2179442608.6415/ssrco,active_tshirt,mens,101010:01c5ca27c6,front,square_three_quarter,300x300.jpg\",\r\n    desc: \"Avalanche to the moon active t-shirt\",\r\n    qty: 77\r\n  },\r\n  {\r\n    id: 12,\r\n    name: \"DOGE Print\",\r\n    price: 1.0000,\r\n    image_url: \"https://ih1.redbubble.net/image.2221784184.0843/flat,300x,075,f-pad,300x300,f8f8f8.jpg\",\r\n    desc: \"Elon Musk Dogecoin metal print\",\r\n    qty: 27\r\n  }\r\n];\r\n\r\nexport default SampleProducts;","import React from 'react';\r\n\r\nimport './MerchantPage.css';\r\nimport MetaMask from '../MetaMask/MetaMask';\r\nimport ProductGrid from '../Products/ProductGrid';\r\nimport SampleProducts from '../Products/SampleProducts';\r\n\r\n/**\r\n * Defines merchant UI containing wallet and inventory\r\n * @param {MerchantPage~updateToAddress} updateToAddress - Callback to update state in parent component\r\n * @returns Merchant UI in JSX\r\n */\r\nconst MerchantPage = ({ updateToAddress }) => {\r\n  return (\r\n    <article className=\"cf h-100\">\r\n      {/* Wallet on left-hand side (page top for small screens) */}\r\n      <div className=\"fl w-100 w-25-l h-100 pa3\">\r\n        <MetaMask updateToAddress={updateToAddress} />\r\n      </div>\r\n\r\n      {/* Inventory on right-hand side (page bottom for small screens) */}\r\n      <div className=\"fl w-100 w-75-l bt b--light-gray bl-l bg-inventory\">\r\n        <h1 className=\"f3 f2-m f1-l tc\">\r\n          Manage Inventory\r\n        </h1>\r\n        <ProductGrid products={SampleProducts} />\r\n      </div>\r\n    </article>\r\n  );\r\n} // const MerchantPage = ...\r\n\r\nexport default MerchantPage;","import React from 'react';\r\n\r\n/**\r\n * Defines footer UI (used in customer UI)\r\n */\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"pv4 ph3 ph5-ns tc\">\r\n      {/* Social media icons/links */}\r\n      <a\r\n        className=\"link dim gray dib br-100 h2 w2 mr3\"\r\n        href=\"https://github.com/Payngolinky\"\r\n        title=\"Payngolinky Github\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer noopener\">\r\n        <svg data-icon=\"github\" viewBox=\"0 0 32 32\" style={{fill: \"currentcolor\"}}>\r\n          <title>Payngolinky Github</title>\r\n          <path d=\"M0 18 C0 12 3 10 3 9 C2.5 7 2.5 4 3 3 C6 3 9 5 10 6 C12 5 14 5 16 5 C18 5 20 5 22 6 C23 5 26 3 29 3 C29.5 4 29.5 7 29 9 C29 10 32 12 32 18 C32 25 30 30 16 30 C2 30 0 25 0 18 M3 20 C3 24 4 28 16 28 C28 28 29 24 29 20 C29 16 28 14 16 14 C4 14 3 16 3 20 M8 21 A1.5 2.5 0 0 0 13 21 A1.5 2.5 0 0 0 8 21 M24 21 A1.5 2.5 0 0 0 19 21 A1.5 2.5 0 0 0 24 21 z\"></path>\r\n        </svg>\r\n      </a>\r\n      <a\r\n        className=\"link dim gray dib h2 w2 br-100 mr3\"\r\n        href=\"https://www.facebook.com/avalancheavax/\"\r\n        title=\"Avalanche Facebook\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer noopener\">\r\n        <svg data-icon=\"facebook\" viewBox=\"0 0 32 32\" style={{fill: \"currentcolor\"}}>\r\n          <title>Avalanche Facebook</title>\r\n          <path d=\"M8 12 L13 12 L13 8 C13 2 17 1 24 2 L24 7 C20 7 19 7 19 10 L19 12 L24 12 L23 18 L19 18 L19 30 L13 30 L13 18 L8 18 z\"></path>\r\n        </svg>\r\n      </a>\r\n      <a\r\n        className=\"link dim gray dib h2 w2 br-100 mr3\"\r\n        href=\"https://twitter.com/avalancheavax?lang=en\"\r\n        title=\"Avalanche Twitter\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer noopener\">\r\n        <svg data-icon=\"twitter\" viewBox=\"0 0 32 32\" style={{fill: \"currentcolor\"}}>\r\n          <title>Avalanche Twitter</title>\r\n          <path d=\"M2 4 C6 8 10 12 15 11 A6 6 0 0 1 22 4 A6 6 0 0 1 26 6 A8 8 0 0 0 31 4 A8 8 0 0 1 28 8 A8 8 0 0 0 32 7 A8 8 0 0 1 28 11 A18 18 0 0 1 10 30 A18 18 0 0 1 0 27 A12 12 0 0 0 8 24 A8 8 0 0 1 3 20 A8 8 0 0 0 6 19.5 A8 8 0 0 1 0 12 A8 8 0 0 0 3 13 A8 8 0 0 1 2 4\"></path>\r\n        </svg>\r\n      </a>\r\n      \r\n      {/* Fake links to trick customer teehee */}\r\n      <div className=\"mt4\">\r\n        <p className=\"f6 link dim gray dib mr3 mr4-ns pointer\">Help</p>\r\n        <p className=\"f6 link dim gray dib mr3 mr4-ns pointer\">Send feedback</p>\r\n        <p className=\"f6 link dim gray dib mr3 mr4-ns pointer\">Privacy</p>\r\n        <p className=\"f6 link dim gray dib pointer\">Terms</p>\r\n      </div>\r\n    </footer>\r\n  );\r\n\r\n} // const Footer = ...\r\n\r\nexport default Footer;","import React, { useEffect, useState } from 'react';\r\n\r\nimport { ethers } from 'ethers';\r\n\r\n// String constants for button text\r\nconst OOS_TEXT = 'Product out-of-stock';\r\nconst BUY_TEXT = 'Buy Now for ';\r\n\r\n/**\r\n * Defines customer-side payment button UI\r\n * @param {Object} product - JSON object containing product details\r\n * @param {string} toAddress - Destination address for customer payment\r\n * @param {string[]} accounts - Array containing single customer account address string\r\n * @param {Object} provider - Web3Provider provider wrapper\r\n * @returns Customer payment button UI in JSX\r\n */\r\nconst PaymentButton = ({ product, toAddress, accounts, provider }) => {\r\n  const [buttonText, setButtonText] = useState(OOS_TEXT);\r\n  const [isDisabled, setDisabled] = useState(true);\r\n  const [account, setAccount] = useState('');\r\n  const [signer, setSigner] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (toAddress !== undefined\r\n        && toAddress.length > 0\r\n        && accounts !== undefined\r\n        && accounts.length > 0\r\n        && provider !== null) {\r\n      // Payment destination address is valid AND customer has valid account\r\n      // Thus, product can be purchased so enable button and update account\r\n      setButtonText(BUY_TEXT + Number(product.price).toFixed(4) + ' ETH');\r\n      setDisabled(false);\r\n      setAccount(accounts[0]);\r\n      setSigner(provider.getSigner());\r\n    } else {\r\n      // Product cannot be bought, display fake out-of-stock message and disable\r\n      if (buttonText !== OOS_TEXT) {\r\n        setButtonText(OOS_TEXT);\r\n      }\r\n      if (!isDisabled) {\r\n        setDisabled(true);\r\n      }\r\n    }\r\n  }, [product, toAddress, accounts, provider, buttonText, isDisabled]);\r\n\r\n  /**\r\n   * Logic to send customer payment - only available if button enabled\r\n   */\r\n  const buyProduct = async () => {\r\n    if (provider === null || signer === null || account.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // WETH token contract address (FUJI), Felix minted WETH and put in pangolin\r\n    // https://discord.com/channels/@me/825792183822057514/830589445236981780\r\n    const wethAddress = '0xFE314b188135893A684EE997eDcb81823Ffb575B';\r\n\r\n    // The ERC-20 Contract ABI\r\n    // Taken from https://docs.ethers.io/v5/getting-started/#getting-started--contracts\r\n    const wethAbi = [\r\n      // Some details about the token\r\n      \"function name() view returns (string)\",\r\n      \"function symbol() view returns (string)\",\r\n\r\n      // Send some of your tokens to someone else\r\n      \"function transfer(address to, uint amount)\",\r\n\r\n      // An event triggered whenever anyone transfers to someone else\r\n      \"event Transfer(address indexed from, address indexed to, uint amount)\"\r\n    ];\r\n\r\n    // Create Contract object\r\n    const wethContract = new ethers.Contract(wethAddress, wethAbi, provider);\r\n\r\n    // Connect to a Signer to pay\r\n    const wethWithSigner = wethContract.connect(signer);\r\n\r\n    // Specify amount to pay from product prop\r\n    const payAmount = ethers.utils.parseEther(Number(product.price).toFixed(4));\r\n\r\n    // Pay amount to destination\r\n    const tx = wethWithSigner.transfer(toAddress, payAmount);\r\n    return tx;\r\n    /* const tx = signer.sendTransaction({\r\n      to: toAddress,\r\n      value: productPrice\r\n    }); */\r\n  }\r\n\r\n  /**\r\n   * This should trigger sending the payment to the merchant\r\n   */\r\n  const onClick = () => {\r\n    buyProduct()\r\n      .then(_tx => {\r\n        alert(\"Payment successful! Product will be shipped within 24 hrs.\");\r\n      })\r\n      .catch(console.error);\r\n  }\r\n\r\n  return (\r\n    <section className=\"mw-100 pa3 pa4-ns\">\r\n      <button\r\n        disabled={isDisabled}\r\n        onClick={onClick}\r\n        className=\"f5 f4-m f3-l tc no-underline br-pill ba bw1 ph3 pv2 dib black pointer\">\r\n        {buttonText}\r\n      </button>\r\n    </section>\r\n  );\r\n\r\n} // const PaymentButton = ...\r\n\r\nexport default PaymentButton;","import React, { Component } from 'react';\r\n\r\nimport { OnboardingButton } from '../MetaMask/OnboardingButton';\r\nimport PaymentButton from '../PaymentButton/PaymentButton';\r\n\r\n/**\r\n * Defines MetaMask UI on customer-side\r\n */\r\nclass MetaMaskCustomer extends Component {\r\n  /**\r\n   * MetaMaskCustomer constructor initializes state variables\r\n   * @constructor\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      accounts: [],\r\n      provider: null\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update accounts in MetaMask state\r\n   * @param {string[]} accounts - Array containing single account address string\r\n   */\r\n   updateAccounts = (accounts) => {\r\n    this.setState({accounts: accounts});\r\n  }\r\n\r\n  /**\r\n   * Update provider in MetaMask state\r\n   * @param {Object} provider - Web3Provider wrapper from window.ethereum\r\n   */\r\n  updateProvider = (provider) => {\r\n    this.setState({provider: provider});\r\n  }\r\n\r\n  /**\r\n   * Render customer-side MetaMask UI\r\n   */\r\n  render() {\r\n    const { accounts, provider } = this.state;\r\n\r\n    return (\r\n      <section className=\"mw-100\">\r\n        <OnboardingButton\r\n          updateAccounts={this.updateAccounts}\r\n          updateProvider={this.updateProvider}\r\n        />\r\n\r\n        <PaymentButton\r\n          product={this.props.product}\r\n          toAddress={this.props.toAddress}\r\n          accounts={accounts}\r\n          provider={provider}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n\r\n} // class MetaMaskCustomer extends Component\r\n\r\nexport default MetaMaskCustomer;","import React from 'react';\r\n\r\n/**\r\n * Defines layout for product description (in customer UI)\r\n * @param {Object} product - JSON object containing product details\r\n * @returns Layout of product description\r\n */\r\nconst ProductDescription = ({ product }) => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"f3 f2-ns lh-title tc tl-ns pl3-ns mb2 mb3-ns\">{product.desc} T-Shirt</h1>\r\n      <h1 className=\"f6 f5-ns lh-copy tc tl-ns pl3-ns mb3 mb4-ns\">\r\n        Designed and sold by <a href=\"https://www.redbubble.com/people/hyggekrog/shop\" className=\"link underline-hover red\">kyggekrog</a>\r\n      </h1>\r\n\r\n      <h1 className=\"f4 f3-ns lh-copy tc tl-ns pl3-ns mb3 mb4-ns\">\r\n        {Number(product.price).toFixed(4)} ETH\r\n      </h1>\r\n\r\n      <h1 className=\"f5 f4-ns lh-copy tc tl-ns pl3-ns\">Features</h1>\r\n      <ul className=\"f6 f5-ns lh-copy tl measure pb3 pb4-ns\">\r\n        <li>Perfect for AVAX HODLers. Few.</li>\r\n        <li>Luxe fashion tee with scoop neck, curved hem, cap sleeves, and larger double-layer print, beautifully packaged for gifting</li>\r\n        <li>Regular fit</li>\r\n        <li>Model shown is 5'8.5\" / 174 cm tall and wearing size small</li>\r\n        <li>Midweight 4.4 oz. / 150 gsm fabric. Solid color t-shirts are 100% cotton. Heathered and marled fabrics are 85% cotton/15% polyester.</li>\r\n        <li>Taped shoulder seams, double-needle hems, and self-fabric neck bind for maximum durability</li>\r\n        <li>Printed on ethically sourced, high quality AS Colour tees</li>\r\n        <li>Preshrunk and includes a wash bag to keep your t-shirt looking great</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n\r\n} // const ProductDescription = ...\r\n\r\nexport default ProductDescription;","import React from 'react';\r\n\r\n/**\r\n * Defines responsive layout for product images (in customer UI)\r\n * @param {Object} product - JSON object containing product details\r\n * @returns Layout of product images that adapts to screen sizes\r\n */\r\nconst ProductImageLayout = ({ product }) => {\r\n  return (\r\n    <div>\r\n      <img\r\n        className=\"db w-100\"\r\n        src=\"https://ih1.redbubble.net/image.2210792579.3669/rco,womens_premium_t_shirt,womens,x1770,fafafa:ca443f4786,front-c,170,40,1000,1000-bg,f8f8f8.jpg\"\r\n        alt={product.desc}\r\n      />\r\n\r\n      {/* Smaller product images below main image */}\r\n      <div className=\"flex flex-column flex-row-l pb0 pb3-ns\">\r\n        <div className=\"w-100 w-third-l\">\r\n          <img\r\n            className=\"db w-100\"\r\n            src=\"https://ih1.redbubble.net/preview/rco,womens_premium_t_shirt,womens,x550,fafafa:ca443f4786,back-c,0,0,400,400-bg,f8f8f8.jpg\"\r\n            alt=\"Back side of premium scoop t-shirt\"\r\n          />\r\n        </div>\r\n        <div className=\"w-100 w-third-l\">\r\n          <img\r\n            className=\"db w-100\"\r\n            src=\"https://ih1.redbubble.net/image.2210792579.3669/raf,400x400,075,t,fafafa:ca443f4786.jpg\"\r\n            alt=\"T-Shirt logo\"\r\n          />\r\n        </div>\r\n        <div className=\"w-100 w-third-l\">\r\n          <img\r\n            className=\"db w-100\"\r\n            src=\"https://ih1.redbubble.net/image.2210792482.3669/ra,fitted_scoop,x600,322e3f:696a94a5d4,front-c,0,0,400,400-bg,f8f8f8.jpg\"\r\n            alt=\"Premium scoop t-shirt alternate color\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n} // const ProductImageLayout = ...\r\n\r\nexport default ProductImageLayout;","import React from 'react';\r\n\r\nimport Footer from '../Footer/Footer';\r\nimport MetaMaskCustomer from '../MetaMaskCustomer/MetaMaskCustomer';\r\nimport ProductDescription from './ProductDescription';\r\nimport ProductImageLayout from './ProductImageLayout';\r\nimport SampleProducts from '../Products/SampleProducts';\r\n\r\n// Get JSON object containing product details\r\nconst product = SampleProducts[0];\r\n\r\n/**\r\n * Defines customer UI containing product description and payment info\r\n * @param {string} toAddress - Destination address for customer payment\r\n * @returns Customer UI in JSX\r\n */\r\nconst CustomerPage = ({ toAddress }) => {\r\n  return (\r\n    <div>\r\n      <article className=\"cf h-100\">\r\n        {/* Product images on left-hand side (page top for small screens) */}\r\n        <div className=\"fl w-100 w-50-m w-75-l\">\r\n          <ProductImageLayout product={product} />\r\n        </div>\r\n\r\n        {/* Payment UI on right-hand side (page bottom for small screens) */}\r\n        <div className=\"fl w-100 w-50-m w-25-l h-100 pa3\">\r\n          <ProductDescription product={product} />\r\n\r\n          <MetaMaskCustomer toAddress={toAddress} product={product} />\r\n        </div>\r\n      </article>\r\n\r\n      {/* Footer with social media links */}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomerPage;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport MerchantPage from './components/MerchantPage/MerchantPage';\r\nimport CustomerPage from './components/CustomerPage/CustomerPage';\r\n\r\nclass App extends Component {\r\n  /**\r\n   * App constructor initializes state variables\r\n   * @constructor\r\n   */\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      route: 'merchant',\r\n      toAddress: '' // Destination address for customer payment\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the current state on a route change\r\n   * @param {string} route - Desired route UI should display\r\n   */\r\n  onRouteChange = (route) => {\r\n    this.setState({route: route});\r\n  }\r\n\r\n  /**\r\n   * Update the destination address for customer payment\r\n   * @param {string} address - Destination address for customer payment\r\n   */\r\n  updateToAddress = (address) => {\r\n    this.setState({toAddress: address});\r\n  }\r\n\r\n  /**\r\n   * Render UIs for merchant and customer\r\n   * @returns Complete UIs for merchant and customer in JSX\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {/* Top navigation bar common to all pages */}\r\n        <Navbar route={this.state.route} onRouteChange={this.onRouteChange} />\r\n\r\n        {\r\n          this.state.route === 'merchant'\r\n          ? <MerchantPage updateToAddress={this.updateToAddress} />\r\n          : <CustomerPage toAddress={this.state.toAddress} />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n} // class App extends Component\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport 'tachyons';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
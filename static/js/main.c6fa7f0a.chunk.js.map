{"version":3,"sources":["components/Navbar/payngolinky-200x1000.png","components/Navbar/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","route","onRouteChange","className","href","title","src","logo","alt","onClick","App","setState","state","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAAe,G,YAAA,IAA0B,kD,OC4C1BA,EAhCA,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cACvB,OACE,sBAAKC,UAAU,iCAAf,UACE,mBACEA,UAAU,sCACVC,KAAK,sCACLC,MAAM,mBAHR,SAIE,qBACEC,IAAKC,EACLJ,UAAU,SACVK,IAAI,uBAER,qBAAKL,UAAU,2BAAf,SAEc,aAAVF,EACE,mBACEQ,QAAS,kBAAMP,EAAc,aAC7BC,UAAU,2CAFZ,2BAKA,mBACEM,QAAS,kBAAMP,EAAc,aAC7BC,UAAU,2CAFZ,iCCQGO,E,kDA9Bb,aAAe,IAAD,8BACZ,gBAUFR,cAAgB,SAACD,GACf,EAAKU,SAAS,CAACV,MAAOA,KAVtB,EAAKW,MAAQ,CACXX,MAAO,YAHG,E,0CAmBd,WACE,OACE,qBAAKE,UAAU,MAAf,SAEE,cAAC,EAAD,CAAQF,MAAOY,KAAKD,MAAMX,MAAOC,cAAeW,KAAKX,sB,GA5B3CY,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c6fa7f0a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/payngolinky-200x1000.ae921ad2.png\";","import React from 'react';\r\nimport './Navbar.css';\r\n\r\nimport logo from './payngolinky-200x1000.png';\r\n\r\n/**\r\n * Defines navigation bar UI\r\n * @callback routeCallback\r\n * @param {string} route String containing current route\r\n * @param {routeCallback} onRouteChange Callback function handling route change \r\n * @returns UI for navigation bar in JSX\r\n */\r\nconst Navbar = ({ route, onRouteChange }) => {\r\n  return (\r\n    <nav className=\"dt w-100 border-box pa3 ph5-ns\">\r\n      <a\r\n        className=\"dtc v-mid mid-gray link w-50 w-30-l\"\r\n        href=\"https://payngolinky.github.io/shop/\"\r\n        title=\"Payngolinky Home\">\r\n        <img\r\n          src={logo}\r\n          className=\"dib h2\"\r\n          alt=\"Payngolinky Logo\" />\r\n      </a>\r\n      <div className=\"dtc v-mid w-50 w-70-l tr\">\r\n        {\r\n          route === 'merchant'\r\n          ? <p\r\n              onClick={() => onRouteChange('customer')}\r\n              className=\"link pointer white dim f6 f5-ns b tr dib\">\r\n              Customer View\r\n            </p>\r\n          : <p\r\n              onClick={() => onRouteChange('merchant')}\r\n              className=\"link pointer white dim f6 f5-ns b tr dib\">\r\n              Merchant View\r\n            </p>\r\n        }\r\n      </div>\r\n    </nav>\r\n  );\r\n\r\n} // const Navbar = ...\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport Navbar from './components/Navbar/Navbar';\r\n\r\nclass App extends Component {\r\n  /**\r\n   * App constructor initializes state variables\r\n   * @constructor\r\n   */\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      route: 'merchant'\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the current state on a route change\r\n   * @param {string} route - Desired route UI should display\r\n   */\r\n  onRouteChange = (route) => {\r\n    this.setState({route: route});\r\n  }\r\n\r\n  /**\r\n   * Render UIs for merchant and customer\r\n   * @returns Complete UIs for merchant and customer in JSX\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {/* Top navigation bar common to all pages */}\r\n        <Navbar route={this.state.route} onRouteChange={this.onRouteChange} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n} // class App extends Component\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
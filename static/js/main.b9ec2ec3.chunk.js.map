{"version":3,"sources":["components/Navbar/payngolinky-200x1000.png","components/Navbar/Navbar.js","components/MetaMask/NetworkData.js","components/MetaMask/OnboardingButton.js","components/MetaMask/MetaMaskDisplay.js","components/MetaMask/MetaMask.js","components/Products/ProductCard.js","components/Products/ProductGrid.js","components/Products/SampleProducts.js","components/MerchantPage/MerchantPage.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","route","onRouteChange","className","href","title","src","logo","alt","onClick","NetworkData","AVAX_CCHAIN_MAINNET_PARAMS","chainId","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","AVAX_CCHAIN_TESTNET_PARAMS","OnboardingButton","updateAccounts","updateProvider","useState","buttonText","setButtonText","isDisabled","setDisabled","accounts","setAccounts","onboarding","useRef","useEffect","current","MetaMaskOnboarding","isMetaMaskInstalled","length","stopOnboarding","handleNewAccounts","newAccounts","window","ethereum","request","method","then","catch","console","error","on","handleProvider","useCallback","a","detectEthereumProvider","provider","ethers","providers","Web3Provider","log","params","_chainId","location","reload","disabled","startOnboarding","getShortAddress","address","substring","MetaMaskDisplay","chainData","setChainData","getChainData","web3Provider","promise_val","MetaMask","setState","state","this","Component","ProductCard","id","price","image_url","qty","desc","Number","toFixed","ProductGrid","products","map","product","SampleProducts","MerchantPage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9ec2ec3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/payngolinky-200x1000.ae921ad2.png\";","import React from 'react';\r\nimport './Navbar.css';\r\n\r\nimport logo from './payngolinky-200x1000.png';\r\n\r\n/**\r\n * Defines navigation bar UI\r\n * @callback routeCallback\r\n * @param {string} route String containing current route\r\n * @param {routeCallback} onRouteChange Callback function handling route change \r\n * @returns UI for navigation bar in JSX\r\n */\r\nconst Navbar = ({ route, onRouteChange }) => {\r\n  return (\r\n    <nav className=\"dt w-100 border-box pa3 ph5-ns\">\r\n      <a\r\n        className=\"dtc v-mid mid-gray link w-50 w-30-l\"\r\n        href=\"https://payngolinky.github.io/shop/\"\r\n        title=\"Payngolinky Home\">\r\n        <img\r\n          src={logo}\r\n          className=\"dib h2\"\r\n          alt=\"Payngolinky Logo\" />\r\n      </a>\r\n      <div className=\"dtc v-mid w-50 w-70-l tr\">\r\n        {\r\n          route === 'merchant'\r\n          ? <p\r\n              onClick={() => onRouteChange('customer')}\r\n              className=\"link pointer white dim f6 f5-ns b tr dib\">\r\n              Customer View\r\n            </p>\r\n          : <p\r\n              onClick={() => onRouteChange('merchant')}\r\n              className=\"link pointer white dim f6 f5-ns b tr dib\">\r\n              Merchant View\r\n            </p>\r\n        }\r\n      </div>\r\n    </nav>\r\n  );\r\n\r\n} // const Navbar = ...\r\n\r\nexport default Navbar;","/**\r\n * NetworkData contains Avalance network data structures\r\n */\r\nconst NetworkData = {\r\n  AVAX_CCHAIN_MAINNET_PARAMS: {\r\n    chainId: '0xa86a', // A 0x-prefixed hexadecimal chainId\r\n    chainName: 'Avalanche Mainnet C-Chain',\r\n    nativeCurrency: {\r\n        name: 'Avalanche',\r\n        symbol: 'AVAX',\r\n        decimals: 18\r\n    },\r\n    rpcUrls: ['https://api.avax.network/ext/bc/C/rpc'],\r\n    blockExplorerUrls: ['https://cchain.explorer.avax.network/']\r\n  },\r\n  AVAX_CCHAIN_TESTNET_PARAMS: {\r\n    chainId: '0xa869', // A 0x-prefixed hexadecimal chainId\r\n    chainName: 'Avalanche Testnet C-Chain',\r\n    nativeCurrency: {\r\n        name: 'Avalanche',\r\n        symbol: 'AVAX',\r\n        decimals: 18\r\n    },\r\n    rpcUrls: ['https://api.avax-test.network/ext/bc/C/rpc'],\r\n    blockExplorerUrls: ['https://cchain.explorer.avax-test.network/']\r\n  }\r\n};\r\n\r\nexport default NetworkData;","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\n\r\nimport { ethers } from 'ethers';\r\nimport detectEthereumProvider from '@metamask/detect-provider';\r\nimport MetaMaskOnboarding from '@metamask/onboarding';\r\nimport NetworkData from './NetworkData';\r\n\r\n// String constants for button text\r\nconst ONBOARD_TEXT = 'Install MetaMask';\r\nconst CONNECT_TEXT = 'Connect MetaMask';\r\nconst CONNECTED_TEXT = 'MetaMask Connected';\r\n\r\n/**\r\n * Defines onboarding button for installing or connecting MetaMask\r\n * @param {OnboardingButton~updateAccounts} updateAccounts - Callback function to update accounts in parent component\r\n * @param {OnboardingButton~updateProvider} updateProvider - Callback function to update provider in parent component\r\n * @returns MetaMask installation/connection button in JSX\r\n * @description Code taken and modified from https://docs.metamask.io/guide/onboarding-library.html#using-react\r\n */\r\nexport function OnboardingButton({ updateAccounts, updateProvider }) {\r\n  const [buttonText, setButtonText] = useState(ONBOARD_TEXT);\r\n  const [isDisabled, setDisabled] = useState(false);\r\n  const [accounts, setAccounts] = useState([]);\r\n  const onboarding = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!onboarding.current) {\r\n      onboarding.current = new MetaMaskOnboarding();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (MetaMaskOnboarding.isMetaMaskInstalled()) {\r\n      if (accounts.length > 0) {\r\n        setButtonText(CONNECTED_TEXT);\r\n        setDisabled(true);\r\n        onboarding.current.stopOnboarding();\r\n      } else {\r\n        setButtonText(CONNECT_TEXT);\r\n        setDisabled(false);\r\n      }\r\n    }\r\n  }, [accounts]);\r\n\r\n  useEffect(() => {\r\n    const handleNewAccounts = (newAccounts) => {\r\n      setAccounts(newAccounts);\r\n      updateAccounts(newAccounts);\r\n    };\r\n    if (MetaMaskOnboarding.isMetaMaskInstalled()) {\r\n      window.ethereum\r\n        .request({ method: 'eth_requestAccounts' })\r\n        .then(handleNewAccounts)\r\n        .catch(console.error);\r\n      \r\n      window.ethereum.on('accountsChanged', handleNewAccounts);\r\n\r\n      /* return () => {\r\n        window.ethereum.off('accountsChanged', handleNewAccounts);\r\n      }; */\r\n    }\r\n  }, [updateAccounts]);\r\n\r\n  /**\r\n   * Maintain func ref detecting MetaMask Ethereum provider and updating state\r\n   */\r\n  const handleProvider = useCallback(async () => {\r\n    const provider = await detectEthereumProvider();\r\n\r\n    if (provider) {\r\n      if (provider === window.ethereum) {\r\n        // Update state in parent component\r\n        updateProvider(new ethers.providers.Web3Provider(provider));\r\n        console.log(\"handleProvider successfully updated provider\");\r\n\r\n        // If Avalanche test network is not available in MetaMask, add it\r\n        // Code taken from https://docs.avax.network/build/tutorials/smart-contracts/add-avalanche-to-metamask-programmatically\r\n        const chainId = await provider.request({ method: 'eth_chainId'});\r\n        if (chainId !== NetworkData.AVAX_CCHAIN_TESTNET_PARAMS.chainId) {\r\n          provider.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [NetworkData.AVAX_CCHAIN_TESTNET_PARAMS]\r\n          })\r\n          .catch(console.error);\r\n\r\n          // Reload the page once chain is changed\r\n          // @todo Handle chain changes away from Avalanche test network\r\n          provider.on('chainChanged', (_chainId) => window.location.reload());\r\n        }\r\n      } else {\r\n        console.error(\"handleProvider possibly detected multiple wallets installed\");\r\n      }\r\n    } else {\r\n      console.error(\"handleProvider encountered null provider\");\r\n    }\r\n  }, [updateProvider]);\r\n\r\n  useEffect(() => {\r\n    if (MetaMaskOnboarding.isMetaMaskInstalled()) {\r\n      handleProvider();\r\n    }\r\n  }, [handleProvider]);\r\n\r\n  const onClick = () => {\r\n    if (MetaMaskOnboarding.isMetaMaskInstalled()) {\r\n      window.ethereum\r\n        .request({ method: 'eth_requestAccounts' })\r\n        .then((newAccounts) => { setAccounts(newAccounts); });\r\n    } else {\r\n      onboarding.current.startOnboarding();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"mw-100 pa3 pa4-ns\">\r\n      <button\r\n        disabled={isDisabled}\r\n        onClick={onClick}\r\n        className=\"f5 f4-m f3-l tc no-underline br-pill ba bw1 ph3 pv2 dib black pointer\">\r\n        {buttonText}\r\n      </button>\r\n    </section>\r\n  );\r\n\r\n} // export function OnboardingButton( ...\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport NetworkData from './NetworkData';\r\n\r\n/**\r\n * Retrieve account address as a truncated string\r\n * @param {string[]} accounts - Array containing single account address string\r\n * @returns String containing truncated account address\r\n */\r\nconst getShortAddress = (accounts) => {\r\n  if (accounts.length === 0) {\r\n    return \"Unavailable\";\r\n  } else {\r\n    const address = accounts[0];\r\n    return address.substring(0, 6)\r\n      + \"...\"\r\n      + address.substring(address.length - 4);\r\n  }\r\n}\r\n\r\n/**\r\n * Display for MetaMask wallet data\r\n * @param {string[]} accounts - Array containing single account address string\r\n * @param {Object} provider - Web3Provider provider wrapper\r\n */\r\nconst MetaMaskDisplay = ({ accounts, provider }) => {\r\n  const [chainData, setChainData] = useState(\"Unavailable\");\r\n\r\n  /**\r\n   * Get chainName (optional) and chainId as a string\r\n   * @param {Object} web3Provider - Web3Provider provider wrapper\r\n   * @returns Resolved Promise string containing chainName/chainId\r\n   */\r\n  const getChainData = async (web3Provider) => {\r\n    if (web3Provider === null) {\r\n      // If web3Provider is null, return Unavailable\r\n      return \"Unavailable\";\r\n    }\r\n\r\n    try {\r\n      // This took a long time to figure out, need to use \".provider.request\"\r\n      // https://docs.ethers.io/v5/api/providers/other/#Web3Provider\r\n      const chainId = await web3Provider.provider.request({\r\n        method: 'eth_chainId'\r\n      });\r\n\r\n      if (chainId === NetworkData.AVAX_CCHAIN_TESTNET_PARAMS.chainId) {\r\n        // Return Avalanche testnet chainName and chainId\r\n        return NetworkData.AVAX_CCHAIN_TESTNET_PARAMS.chainName\r\n          + \", \" + NetworkData.AVAX_CCHAIN_TESTNET_PARAMS.chainId;\r\n      } else if (chainId === NetworkData.AVAX_CCHAIN_MAINNET_PARAMS.chainId) {\r\n        // Return Avalanche mainnet chainName and chainId\r\n        return NetworkData.AVAX_CCHAIN_MAINNET_PARAMS.chainName\r\n          + \", \" + NetworkData.AVAX_CCHAIN_MAINNET_PARAMS.chainId;\r\n      } else {\r\n        // Otherwise, just return chainId\r\n        return chainId;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      return \"Unavailable\";\r\n    }\r\n  } // const getChainData = ...\r\n\r\n  // getChainData returns a resolved Promise object, which React can't render\r\n  // Need to call useEffect to set chainData state\r\n  useEffect(() => {\r\n    getChainData(provider)\r\n      .then(promise_val => { setChainData(promise_val); })\r\n      .catch(console.error);\r\n  }, [provider]);\r\n\r\n  return (\r\n    <section className=\"mw-100\">\r\n      <ul className=\"list pl0\">\r\n        {/* Display chain info */}\r\n        <li className=\"pa2 pa3-ns bb b--black-10\">\r\n          <b className=\"db f3 mb1 tc\">Chain</b>\r\n          <span className=\"f5 db lh-copy tc\">{ chainData }</span>\r\n        </li>\r\n\r\n        {/* Display account/wallet address */}\r\n        <li className=\"pa2 pa3-ns\">\r\n          <b className=\"db f3 mb1 tc\">Address</b>\r\n          <span className=\"f5 db lh-copy tc\">\r\n            { getShortAddress(accounts) }\r\n          </span>\r\n        </li>\r\n\r\n        {/* TODO: List token balances and latest transactions */}\r\n      </ul>\r\n    </section>\r\n  );\r\n} // const MetaMaskDisplay = ...\r\n\r\nexport default MetaMaskDisplay;","import React, { Component } from 'react';\r\n\r\nimport { OnboardingButton } from './OnboardingButton';\r\nimport MetaMaskDisplay from './MetaMaskDisplay';\r\n\r\nclass MetaMask extends Component {\r\n  /**\r\n   * Metamask constructor initializes state variables\r\n   * @constructor\r\n   */\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      accounts: [],\r\n      provider: null\r\n    }\r\n\r\n    /* this.ethereumButton = document.querySelector('#MetaMaskButton');\r\n    this.sendEthButton = document.querySelector('#MMsendToAddress');\r\n    this.account = undefined;\r\n    if(!this.metaMaskInstalled() && this.isMetaMask()){\r\n      console.log('MetaMask is not installed!');\r\n      this.ethereumButton.innerHTML = 'Install Metamask';\r\n    }\r\n    else{\r\n      console.log('MetaMask is installed');\r\n      this.setupConnect();\r\n      this.setupSend();\r\n    } */\r\n  }\r\n\r\n  /**\r\n   * Update accounts in MetaMask state\r\n   * @param {string[]} accounts - Array containing single account address string\r\n   */\r\n  updateAccounts = (accounts) => {\r\n    this.setState({accounts: accounts});\r\n  }\r\n\r\n  /**\r\n   * Update provider in MetaMask state\r\n   * @param {Object} provider - Web3Provider wrapper from window.ethereum\r\n   */\r\n  updateProvider = (provider) => {\r\n    this.setState({provider: provider});\r\n  }\r\n\r\n  /* metaMaskInstalled(){\r\n    return typeof window.ethereum !== 'undefined' ? true : false;\r\n  }\r\n\r\n  isMetaMask(){\r\n    return window.ethereum.isMetaMask;\r\n  }\r\n\r\n  setupConnect(){\r\n    this.ethereumButton.addEventListener('click', () => {this.linkMetaMaskAccount();});\r\n    window.ethereum.on('accountsChanged', function (accounts) {\r\n      this.account = accounts[0];\r\n      // Time to reload your interface with accounts[0]!\r\n      console.log('The account was changed!')\r\n    });\r\n    window.ethereum.on('chainChanged', (_chainId) => window.location.reload());\r\n  }\r\n\r\n  handleChainChanged(chainId){\r\n    console.log(chainId);\r\n    let fujiHex = 43113;\r\n    console.log(fujiHex.toString(16));\r\n    if(chainId === '0x'+fujiHex.toString(16)){\r\n      console.log('all good');\r\n      return true;\r\n    }\r\n    else{\r\n      this.ethereumButton.innerHTML = 'please switch to Fuji Network';\r\n      return false;\r\n    }\r\n  }\r\n\r\n  setupSend(){\r\n    //Sending Ethereum to an address\r\n    let myvalue = 0.05e18;\r\n    let mygasPrice = 470e9;\r\n    let mygas = 21000;\r\n    this.sendEthButton.addEventListener('click', () => {\r\n      if(this.account !== undefined){\r\n        window.ethereum\r\n        .request({\r\n          method: 'eth_sendTransaction',\r\n          params: [\r\n            {\r\n              from: this.account,\r\n              to: '0x9a57d321084F5b1ac1fCB32230a83Df9EF0AB565',\r\n              value: '0x'+myvalue.toString(16),\r\n              gasPrice: '0x'+mygasPrice.toString(16),\r\n              gas: '0x'+mygas.toString(16),\r\n            },\r\n          ],\r\n        })\r\n        .then((txHash) => console.log(txHash))\r\n        .catch((error) => console.error);\r\n      }\r\n    });\r\n  }\r\n\r\n  async linkMetaMaskAccount(){\r\n    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' }).catch((error) => console.error);\r\n    const chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n    if(this.handleChainChanged(chainId)){\r\n      if(accounts){\r\n        this.account = accounts[0];\r\n        this.ethereumButton.innerHTML = this.account;\r\n        this.sendEthButton.innerHTML = 'Send Coins';\r\n      }\r\n    }\r\n  } */\r\n\r\n  // Some test code for retrieving account balance\r\n  /* getBalance = async (provider, accounts) => {\r\n    if (provider !== null && accounts.length > 0) {\r\n      console.log(\"provider is not null\");\r\n      \r\n      let balance = await provider.getBalance(accounts[0]);\r\n      console.log(\"Wei: \", balance.toString());\r\n      console.log(\"Ether: \", ethers.utils.formatEther(balance));\r\n      return balance;\r\n    } else {\r\n      console.log(\"provider is null\");\r\n      return -1;\r\n    }\r\n  } */\r\n\r\n  /**\r\n   * Render MetaMask UI\r\n   * @returns Complete MetaMask UI in JSX\r\n   */\r\n  render() {\r\n    const { accounts, provider } = this.state;\r\n\r\n    return (\r\n      <section className=\"mw-100\">\r\n        <OnboardingButton\r\n          updateAccounts={this.updateAccounts}\r\n          updateProvider={this.updateProvider}\r\n        />\r\n\r\n        <MetaMaskDisplay\r\n          accounts={accounts}\r\n          provider={provider}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n\r\n} // class MetaMask extends Component\r\n\r\nexport default MetaMask;","import React from 'react';\r\n\r\n/**\r\n * Defines UI for a single product card\r\n * @param {number} id - Product ID\r\n * @param {string} name - Name of product\r\n * @param {number} price - Price of product (in AVAX)\r\n * @param {string} image_url - Product image URL\r\n * @param {number} qty - Quantity of product available\r\n * @param {string} desc - Brief description of product\r\n * @returns Single product card in JSX\r\n */\r\nconst ProductCard = ({id, name, price, image_url, qty, desc}) => {\r\n  return (\r\n    <article className=\"link dim pointer br2 ba dark-gray b--black-10 shadow-3 mv4 w-100 mw5 center\">\r\n      <img\r\n        src={image_url}\r\n        className=\"db w-100 br2 br--top\"\r\n        alt={\"Product: \" + name} />\r\n\r\n      <div className=\"pa2 ph3-ns h4 pb3-ns\">\r\n        <div className=\"dt w-100 mt1\">\r\n          <div className=\"dtc\">\r\n            <h1 className=\"f5 f4-ns mv0\">{name}</h1>\r\n          </div>\r\n          <div className=\"dtc tr\">\r\n            <h2 className=\"f5 mv0\">{Number(price).toFixed(3)} AVAX</h2>\r\n          </div>\r\n        </div>\r\n\r\n        <p className=\"f6 lh-copy measure mt2 mid-gray\">\r\n          ID {id}, Qty {qty}: {desc}\r\n        </p>\r\n      </div>\r\n    </article>\r\n  );\r\n} // const ProductCard = ...\r\n\r\nexport default ProductCard;","import React from 'react';\r\n\r\nimport ProductCard from './ProductCard';\r\n\r\n/**\r\n * Defines UI for a grid of product cards\r\n * @param {Object[]} products - Array of products to populate the grid with\r\n * @returns Grid of product cards in JSX\r\n */\r\nconst ProductGrid = ({products}) => {\r\n  return (\r\n    <section className=\"cf\">\r\n      {\r\n        products.map(product => {\r\n          return (\r\n            <div key={product.id} className=\"fl w-100 w-50-m w-25-l pa3 pa4-l\">\r\n              <ProductCard\r\n                id={product.id}\r\n                name={product.name}\r\n                price={product.price}\r\n                image_url={product.image_url}\r\n                qty={product.qty}\r\n                desc={product.desc}\r\n              />\r\n            </div>\r\n          );\r\n        })\r\n      }\r\n    </section>\r\n  );\r\n} // const ProductGrid = ...\r\n\r\nexport default ProductGrid;","/**\r\n * SampleProducts is an array of JSON objects containing sample products\r\n */\r\nconst SampleProducts = [\r\n  {\r\n    id: 1,\r\n    name: \"SOL T-Shirt\",\r\n    price: 0.697,\r\n    image_url: \"https://ih1.redbubble.net/image.2202518381.7027/ssrco,slim_fit_t_shirt,two_model,101010:01c5ca27c6,front,square_three_quarter,300x300.jpg\",\r\n    desc: \"Solana My Retirement Plan t-shirt\",\r\n    qty: 123\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"LINK T-Shirt\",\r\n    price: 0.959,\r\n    image_url: \"https://ih1.redbubble.net/image.1950348338.7594/ssrco,mens_premium_t_shirt,mens,101010:01c5ca27c6,front,square_three_quarter,x300-bg,f8f8f8.1.jpg\",\r\n    desc: \"Chainlink See You on the Moon t-shirt\",\r\n    qty: 57\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"GRT Journal\",\r\n    price: 0.765,\r\n    image_url: \"https://ih1.redbubble.net/image.2260882070.0553/hj,300x-pad,300x300,f8f8f8.jpg\",\r\n    desc: \"The Graph hardcover journal\",\r\n    qty: 43\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"AAVE Curtain\",\r\n    price: 2.000,\r\n    image_url: \"https://ih1.redbubble.net/image.2012870348.5512/ur,shower_curtain_closed_context,square,300x300.1.jpg\",\r\n    desc: \"AAVE shower curtain, 71 x 74 inches\",\r\n    qty: 98\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"AVAX T-Shirt\",\r\n    price: 0.933,\r\n    image_url: \"https://ih1.redbubble.net/image.2210792579.3669/ssrco,long_t_shirt,mens,fafafa:ca443f4786,front,square_three_quarter,x300-bg,f8f8f8.1.jpg\",\r\n    desc: \"Dabbing Easter bunny HODLing AVAX\",\r\n    qty: 30\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"ETH Case\",\r\n    price: 0.904,\r\n    image_url: \"https://ih1.redbubble.net/image.1373269076.7025/icr,iphone_12_soft,back,a,x300-pad,300x300,f8f8f8.jpg\",\r\n    desc: \"Ethereum iPhone 12 shock absorbent case\",\r\n    qty: 214\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Polygon Logo\",\r\n    price: 0.036,\r\n    image_url: \"https://ih1.redbubble.net/image.2229528085.4308/sss,small,product_square,300x300.jpg\",\r\n    desc: \"Polygon To The Moon! sticker\",\r\n    qty: 17\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"LINK Mask\",\r\n    price: 0.348,\r\n    image_url: \"https://ih1.redbubble.net/image.1869798016.8105/ur,flat_mask_three_quarter,square,300x300.jpg\",\r\n    desc: \"Two layers of soft 95% polyester\",\r\n    qty: 85\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"HODL Chiffon\",\r\n    price: 1.066,\r\n    image_url: \"https://ih1.redbubble.net/image.481948677.9432/ssrco,chiffon_top,womens,black,front,square_three_quarter,x300-bg,f8f8f8.1u8.jpg\",\r\n    desc: \"HODL red background chiffon top\",\r\n    qty: 56\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"Acala T-Shirt\",\r\n    price: 0.716,\r\n    image_url: \"https://ih1.redbubble.net/image.2043110152.4257/ssrco,classic_tee,two_models,fafafa:ca443f4786,front,square_three_quarter,300x300.jpg\",\r\n    desc: \"Acala Network classic t-shirt\",\r\n    qty: 38\r\n  },\r\n  {\r\n    id: 11,\r\n    name: \"AVAX T-Shirt\",\r\n    price: 0.007,\r\n    image_url: \"https://ih1.redbubble.net/image.2179442608.6415/ssrco,active_tshirt,mens,101010:01c5ca27c6,front,square_three_quarter,300x300.jpg\",\r\n    desc: \"Avalanche to the moon active t-shirt\",\r\n    qty: 77\r\n  },\r\n  {\r\n    id: 12,\r\n    name: \"DOGE Print\",\r\n    price: 1.000,\r\n    image_url: \"https://ih1.redbubble.net/image.2221784184.0843/flat,300x,075,f-pad,300x300,f8f8f8.jpg\",\r\n    desc: \"Elon Musk Dogecoin metal print\",\r\n    qty: 27\r\n  }\r\n];\r\n\r\nexport default SampleProducts;","import React from 'react';\r\n\r\nimport './MerchantPage.css';\r\nimport MetaMask from '../MetaMask/MetaMask';\r\nimport ProductGrid from '../Products/ProductGrid';\r\nimport SampleProducts from '../Products/SampleProducts';\r\n\r\n/**\r\n * Defines merchant UI containing wallet and inventory\r\n * @returns Merchant UI in JSX\r\n */\r\nconst MerchantPage = () => {\r\n  return (\r\n    <article className=\"cf h-100\">\r\n      {/* Wallet on left-hand side (page top for small screens) */}\r\n      <div className=\"fl w-100 w-25-l h-100 pa3\">\r\n        <MetaMask />\r\n      </div>\r\n\r\n      {/* Inventory on right-hand side (page bottom for small screens) */}\r\n      <div className=\"fl w-100 w-75-l bt b--light-gray bl-l bg-inventory\">\r\n        <h1 className=\"f3 f2-m f1-l tc\">\r\n          Manage Inventory\r\n        </h1>\r\n        <ProductGrid products={SampleProducts} />\r\n      </div>\r\n    </article>\r\n  );\r\n} // const MerchantPage = ...\r\n\r\nexport default MerchantPage;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport MerchantPage from './components/MerchantPage/MerchantPage';\r\n\r\nclass App extends Component {\r\n  /**\r\n   * App constructor initializes state variables\r\n   * @constructor\r\n   */\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      route: 'merchant'\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the current state on a route change\r\n   * @param {string} route - Desired route UI should display\r\n   */\r\n  onRouteChange = (route) => {\r\n    this.setState({route: route});\r\n  }\r\n\r\n  /**\r\n   * Render UIs for merchant and customer\r\n   * @returns Complete UIs for merchant and customer in JSX\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {/* Top navigation bar common to all pages */}\r\n        <Navbar route={this.state.route} onRouteChange={this.onRouteChange} />\r\n\r\n        {\r\n          this.state.route === 'merchant'\r\n          ? <MerchantPage />\r\n          : <div></div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n} // class App extends Component\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport 'tachyons';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}